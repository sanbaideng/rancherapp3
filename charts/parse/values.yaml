volumePermissions:
  enabled: false
  image:
    registry: docker.io
    repository: bitnami/minideb
    tag: stretch
    pullPolicy: Always

  resources: {}

## Kubernetes serviceType for Parse Deployment
## ref: http://kubernetes.io/docs/user-guide/services/#publishing-services---service-types
##
service:
  type: LoadBalancer
  # Parse dashboard HTTP Port
  port: 80
  ## loadBalancerIP:
  ##
  ## nodePorts:
  ##   http: <to set explicitly, choose port between 30000-32767>
  nodePorts:
    http: ""
  ## Enable client source IP preservation
  ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  ##
  externalTrafficPolicy: Cluster

## loadBalancerIP for the Parse Service (optional, cloud specific)
## ref: http://kubernetes.io/docs/user-guide/services/#type-loadbalancer
##
#
server:
  ## Bitnami Parse image version
  ## ref: https://hub.docker.com/r/bitnami/parse/tags/
  ##
  image:
    registry: docker.io
    repository: bitnami/parse
    tag: 3.9.0-debian-9-r8

    pullPolicy: IfNotPresent

  securityContext:
    enabled: true
    fsGroup: 1001
    runAsUser: 1001

  port: 1337

  ## Parse API mount path
  ## ref: https://github.com/bitnami/bitnami-docker-parse#configuration
  ##
  mountPath: /parse

  ## Parse Server App ID
  ## ref: https://github.com/bitnami/bitnami-docker-parse#configuration
  ##
  appId: myappID

  ## Parse Server Master Key
  ## ref: https://github.com/bitnami/bitnami-docker-parse#configuration
  ##
  # masterKey:

  ## Enable Cloud Clode
  ## ref: https://github.com/bitnami/bitnami-docker-parse#how-to-deploy-your-cloud-functions-with-parse-cloud-code
  ##
  enableCloudCode: false

  resources: {}

  livenessProbe:
    enabled: true
    initialDelaySeconds: 120
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  readinessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 5
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5

  affinity: {}


  nodeSelector: {}

  tolerations: {}

dashboard:
  ## Enable deployment of Parse Dashboard
  ##
  enabled: true

  ## Bitnami Parse Dashboard image version
  ## ref: https://hub.docker.com/r/bitnami/parse-dashboard/tags/
  ##
  image:
    registry: docker.io
    repository: bitnami/parse-dashboard
    tag: 2.0.3-debian-9-r1

    pullPolicy: IfNotPresent

  securityContext:
    enabled: true
    fsGroup: 1001
    runAsUser: 1001

  ## Parse Dashboard application username
  ## ref: https://github.com/bitnami/bitnami-docker-parse-dashboard#configuration
  ##
  username: user

  ## Parse Dashboard application password
  ## Defaults to a random 10-character alphanumeric string if not set
  ## ref: https://github.com/bitnami/bitnami-docker-parse-dashboard#configuration
  ##
  # password:

  ## Parse Dashboard application name
  ## ref: https://github.com/bitnami/bitnami-docker-parse-dashboard#configuration
  ##
  appName: MyDashboard

  ## Parse Dashboard pods' resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}
  ## Parse Dashboard pods' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 240
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  readinessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 5
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5

  ## Affinity for pod assignment. Evaluated as a template
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ##
  affinity: {}

  ## Node labels for pod assignment. Evaluated as a template
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Tolerations for pod assignment. Evaluated as a template
  ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: {}

ingress:
  ## Set to true to enable ingress record generation
  ##
  enabled: true

  ## Set this to true in order to add the corresponding annotations for cert-manager
  ##
  certManager: false
  annotations:
  #  kubernetes.io/ingress.class: nginx

  dashboard:
    hosts:
      - name: ${host}
        path: /

        ## Set this to true in order to enable TLS on the ingress record
        ##
        tls: false
        tlsSecret: parse.local-tls

  server:
    hosts:
      - name: ${host}
        path: /

        tls: false

        tlsSecret: parse.local-tls

  secrets:

persistence:
  enabled: false

  accessMode: ReadWriteOnce
  size: 8Gi


mongodb:
  ## MongoDB Password authentication
  usePassword: true

  persistence:
    enabled: true

    accessMode: ReadWriteOnce
    size: 8Gi
