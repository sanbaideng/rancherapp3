
image:
  registry: docker.io
  repository: bitnami/nats
  tag: 1.4.1-debian-9-r99

  pullPolicy: IfNotPresent

replicaCount: 1

securityContext:
  enabled: true
  fsGroup: 1001
  runAsUser: 1001


antiAffinity: soft


podAnnotations: {}


podLabels: {}

resourceType: "statefulset"

## Update strategy for statefulset, can be set to RollingUpdate or OnDelete by default.
## https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#updating-statefulsets
statefulset:
  updateStrategy: OnDelete
deployment:
  updateType: RollingUpdate
resources: {}
# limits:
#   cpu: 500m
#   memory: 512Mi
# requests:
#   cpu: 100m
#   memory: 256Mi

livenessProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1
readinessProbe:
  enabled: true
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1

## Client Authentication
## ref: https://github.com/nats-io/gnatsd#authentication
##
auth:
  enabled: true
  user: nats_client
  # password:
  # token:

## Cluster Authentication
## ref: https://github.com/nats-io/gnatsd#authentication
##
clusterAuth:
  enabled: true
  user: nats_cluster
  # password:
  # token:

## Logging parameters
## ref: https://github.com/nats-io/gnatsd#command-line-arguments
##
debug:
  enabled: false
  trace: false
  logtime: false

networkPolicy:
  ## Enable creation of NetworkPolicy resources.
  enabled: false
  allowExternal: true

client:
  service:
    ## Kubernetes service type
    type: ClusterIP
    port: 4222
    annotations: {}

cluster:
  service:
    ## Kubernetes service type
    type: ClusterIP
    port: 6222

    annotations: {}

monitoring:
  service:
    ## Kubernetes service type
    type: ClusterIP
    port: 8222

    annotations: {}

    loadBalancerIP:


ingress:
  enabled: true
  # The list of hostnames to be covered with this ingress record.
  # Most likely this will be just one host, but in the event more hosts are needed, this is an array
  host: ${host}
    tls: false
    tlsSecret: nats.local-tls
    annotations:

  secrets:
extraArgs: []

metrics:
  enabled: false
  image:
    registry: docker.io
    repository: synadia/prometheus-nats-exporter
    tag: 0.1.0
    pullPolicy: IfNotPresent

  port: 7777
  ## Metrics exporter annotations
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "7777"
  ## Metrics exporter flags
  args:
    - -connz
    - -routez
    - -subz
    - -varz

sidecars:
## Add sidecars to the pod.
## e.g.
# - name: your-image-name
  # image: your-image
  # imagePullPolicy: Always
  # ports:
  # - name: portname
  #   containerPort: 1234
